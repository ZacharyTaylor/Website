<div id="bg-code" class="jumbotron">
  <div class="container">
    <h1>Source Code</h1>
    <p>C++, CUDA and Matlab functions for automatic alignment sensor alignment.</p>
  </div>
</div>

<div class = "container">

<div class="page-header">
<h2>Projects</h2>
</div>

I currently have four projects dealing with image alignment that have publicly available code

<div class="page-header">
    <h3><a href = "https://github.com/ZacharyTaylor/ICRA2015-Calibration-Code">Motion Based Calibration</a></h3>
</div>
<p>My latest project, this code utilizes the motion of sensors in combination with their output to calibrate a system with no initial estimates to the extrinsic parameters required. The code works for cameras, IMU and 3D lidar sensors and in addition to providing the calibration gives an estimate of the uncertainty of the values obtained. For more details see my ICRA 2015 paper in the publications section.<p>
<p>Note this code makes use of Matlab and Cuda, because of this it requires a computer with an Nvidia graphics card with compute 2.0 or higher.<p>


<div class="page-header">
    <h3><a href = "https://github.com/ZacharyTaylor/motion-based-calibration">Pairwise Motion Based Calibration</a></h3>
</div>
<p>Note this code represents a rough first go at the above Motion Based Calibration code and is only here for completeness. This code utilizes structure from motion in combination with the Levinson method to calibrate a Velodyne-Camera system. For more details see my ICRA2014 long term autonomy workshop paper in the publications section.<p>

<div class="page-header">
    <h3><a href = "http://www.mathworks.com/matlabcentral/fileexchange/authors/377690">General Matlab Functions</a></h3>
</div>
<p>A set of a couple of the more useful functions I have written in Matlab. Currently contains an efficient normals calculation method and a method for generating images from point clouds<p>
<p>This code has had a strong focus on efficiency, readability and ease of use.<p>

<div class="page-header">
    <h3><a href="https://github.com/ZacharyTaylor/Multimodal-Calib/">Multimodal-Calib</a></h3>
</div>
<p>Multimodal-calib is a set of C++, Cuda and Matlab functions I have written during my thesis, for the automatic alignment and extrinsic calibration of different sensors. The main focus of this work has been for the use of panoramic cameras with Velodyne lidar. The methods developed however are not limited to this application and have been used for a range of multi-modal 2D-2D and 2D-3D registration tasks.
 
<h4>Current state of the Multimodal-calib code</h4>
<p>Unlike the previous two projects the main function of the code has been to allow me to test ideas during my thesis. Because of this there has never been a strong focus on the readability, portability or use of the code by others. That being said recently due to some interest in the code I have made an effort to improve the approachability of the code so that others can use it. If you have tried to use the code and hit an issue please let me know so I can fix the code to prevent it happening to others.</p>

<h4>Documentation</h4>
<p>The m files all contain information on each function and how to run them with a few example scripts provided with the code. If you are interested in the C++ and CUDA that is running behind the scenes the Doxergen documentation can be found <a href="http://zacharytaylor.github.io/Multimodal-Calib/Doxygen/html/index.html">here</a>.</p>

</div>